apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ .Values.logsigner.name }}
  labels:
    app: {{ template "trillian.name" . }}
    type: {{ .Values.logsigner.name }}
spec:
  replicas: {{ .Values.logsigner.replicas }}
  strategy: {}
  template:
    metadata:
      labels:
        heritage: {{ .Release.Service }}
        release: {{ .Release.Name }}
        chart: {{ .Chart.Name }}-{{ .Chart.Version }}
        app: {{ template "trillian.name" . }}
        type: {{ .Values.logsigner.name }}
    spec:
      volumes:
      - name: google-cloud-key
        secret:
          secretName: {{ .Values.secret.name }}
      restartPolicy: Always
      containers:
      - name: {{ .Values.logsigner.name }}
        image: {{ template "registry.fullname" . }}/{{ .Values.logsigner.image.name }}:{{ .Values.logsigner.image.tag }}
        imagePullPolicy: {{ .Values.logsigner.image.pullPolicy }}
        args: [
          "$(STORAGE_FLAG)",
          "--storage_system=$(STORAGE_SYSTEM)",
          "--etcd_servers=trillian-etcd-cluster-client:2379",
          "--quota_system=etcd",
          "--etcd_http_service=trillian-logsigner-http",
          "--http_endpoint=0.0.0.0:8091",
          "--sequencer_guard_window=1s",
          "--sequencer_interval=$(SIGNER_INTERVAL)",
          "--num_sequencers=$(SIGNER_NUM_SEQUENCERS)",
          "--batch_size=$(SIGNER_BATCH_SIZE)",
          "--cloudspanner_dequeue_bucket_fraction=$(SIGNER_DEQUEUE_BUCKET_FRACTION)",
          "--resign_odds=$(SIGNER_RESIGN_ODDS)",
          "--alsologtostderr"
        ]
        envFrom:
          - configMapRef:
              name: {{ .Values.configmap.name }}
        resources:
          limits:
            cpu: "1.5"
          requests:
            cpu: "1"
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8091
          failureThreshold: 3
          periodSeconds: 30
          timeoutSeconds: 5
        ports:
        - containerPort: 8091
        volumeMounts:
        - name: google-cloud-key
          mountPath: /var/secrets/google
      - name: prometheus-to-sd
        image: gcr.io/google-containers/prometheus-to-sd:v0.2.6
        ports:
          - name: profiler
            containerPort: 6060
        command:
          - /monitor
          - --stackdriver-prefix=custom.googleapis.com
          - --source=logsigner:http://localhost:8091/metrics
          - --pod-id=$(POD_NAME)
          - --namespace-id=$(POD_NAMESPACE)
          - --metrics-resolution=5s
        env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
status: {}
